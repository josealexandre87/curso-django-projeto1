"""
Django settings for projeto project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&o1$&m+fg8+6i=@@xce5q-$swm7qv-4$-^92j0qu4scwu^u)zz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
# TODAS AS VEZES QUE EU CRIAR UM APP NO MEU PROJETO, TENHO QUE INFORMAR AQUI!!!!!!!!
    'recipes',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'projeto.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'base_templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'projeto.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/' # Para importar os arquivos estáticos no html vamos inserir {% load static %} no topo do arquivo html, 
# antes de <!DOCTYPE html>, e depois chamamos um link no corpo do documento para que seja importado arquivo estático usando 
# <link rel="stylesheet" href="{% static 'recipes/css/styles.css' %}">, onde static já corresponde ao diretório base e 
# passamos o restante do PATH sem começar por static.

# STATICFILES_DIRS vai adicionar uma NOVA pasta estática que foi criada em outro lugar do projeto e será utilizada pelo Django 
# quando executar/importar o outro arquivo estático do projeto.
STATICFILES_DIRS = [
    BASE_DIR / 'base_static', # nome da pasta! Podem ser passadas várias pastas de arquivos estáticos usando sempre BASE_DIR /

]

# STATIC_ROOT cria o caminho para a pasta nomeada em uma strig ('nome_da_pasta') onde serão enviados todos os arquivos estáticos 
# do projeto quando executar o comando "python manage.py collectstatic". Lembrar de usar namespaces para não ocorrer colisão
# de arquivos quando o Django coletar as pastas e os arquivos estáticos, pois ele não mantem arquivos com mesmo nome!
STATIC_ROOT = BASE_DIR / 'static'

MEDIA_URL = '/media/' #para inserir arquivos de mídia que virão do CRUD de models.py, da url.../admin/
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
